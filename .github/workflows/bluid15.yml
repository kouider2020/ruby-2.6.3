name: Onodo CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: onodo
          POSTGRES_PASSWORD: password
          POSTGRES_DB: onodo
        ports: [5432]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.4.3

      - name: Set up Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 12

      - name: Install dependencies (dynamic Gemfile path)
        run: |
          gem update --system 3.2.3
          gem install bundler -v 1.17.3

          GEMFILE_PATH=$(find . -type f -name Gemfile | head -n 1)

          if [ -z "$GEMFILE_PATH" ]; then
            echo "ERROR: Gemfile not found!"
            exit 1
          fi

          GEMDIR=$(dirname "$GEMFILE_PATH")
          echo "Found Gemfile in: $GEMDIR"

          cd "$GEMDIR"
          bundle install
          yarn install

      - name: Set up database
        run: |
          GEMFILE_PATH=$(find . -type f -name Gemfile | head -n 1)

          if [ -z "$GEMFILE_PATH" ]; then
            echo "ERROR: Gemfile not found!"
            exit 1
          fi

          GEMDIR=$(dirname "$GEMFILE_PATH")
          cd "$GEMDIR"
          cp config/database.yml.github config/database.yml || echo "No custom DB config"
          bundle exec rake db:create db:migrate db:seed

      - name: Start Rails server in background
        run: |
          GEMFILE_PATH=$(find . -type f -name Gemfile | head -n 1)

          if [ -z "$GEMFILE_PATH" ]; then
            echo "ERROR: Gemfile not found!"
            exit 1
          fi

          GEMDIR=$(dirname "$GEMFILE_PATH")
          cd "$GEMDIR"
          nohup rails server -e test -p 3000 &
          sleep 10

      - name: Check if server is running
        run: |
          curl -f http://localhost:3000 || (echo "Server failed to start" && exit 1)
          
